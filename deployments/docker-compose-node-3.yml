version: "3.9"

services:
  datanode3:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode3
    restart: always
    volumes:
      - hadoop_datanode3:/hadoop/dfs/data
    ports:
      - 9864:9864
    environment:
      SERVICE_PRECONDITION: "10.123.252.194:9870"
    env_file:
      - ./hadoop.env

  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    ports:
      - 8080:8080
      - 7077:7077
    environment:
      - INIT_DAEMON_STEP=setup_spark

  spark-worker-3:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-3
    depends_on:
      - spark-master
    ports:
      - 8081:8081
    environment:
      - "SPARK_MASTER=10.123.252.207:7077"

  zookeeper-3:
    image: confluentinc/cp-zookeeper:7.2.1
    network_mode: host
    # ports:
    #   - 2181:2181
    #   - 2888-3888:2888-3888
    restart: unless-stopped
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: 10.123.252.231:2888:3888;10.123.252.194:2888:3888;10.123.252.207:2888:3888
    networks:
      shared_network:
  
  kafka-3:
    image: confluentinc/cp-kafka:7.2.1
    ports:
      - 39092:39092
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: 10.123.252.231:2181,10.123.252.194:2181,10.123.252.207:2181
      KAFKA_PARTITION_ASSIGNMENT_STRATEGY: org.apache.kafka.clients.consumer.RoundRobinAssignor
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:39092
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://10.123.252.207:9092,EXTERNAL://host.docker.internal:39092"

    restart: unless-stopped
    depends_on:
      - zookeeper-3
    networks:
      shared_network:

networks:
  shared_network:
    name: "shared_network"

volumes:
  hadoop_datanode3: