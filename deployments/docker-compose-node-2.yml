version: "3.9"

services:
  namenode:
    container_name: namenode
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    restart: unless-stopped
    network_mode: host
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - ./stream-in:/stream-in
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  datanode-2:
    container_name: datanode-2
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    restart: unless-stopped
    network_mode: host
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    ports:
      - 9864:9864
    environment:
      SERVICE_PRECONDITION: "10.123.252.194:9870"
    env_file:
      - ./hadoop.env
    logging:
      options:
        max-size: "10m"
        max-file: "3"
  
  spark-worker-2:
    container_name: spark-worker-2
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    restart: unless-stopped
    network_mode: host
    ports:
      - 8081:8081
    environment:
      - "SPARK_MASTER=10.123.252.207:7077"
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  zookeeper-2:
    container_name: zookeeper-2
    image: confluentinc/cp-zookeeper:7.2.1
    restart: unless-stopped
    network_mode: host
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: 10.123.252.231:2888:3888;10.123.252.194:2888:3888;10.123.252.207:2888:3888
    logging:
      options:
        max-size: "10m"
        max-file: "3"
  
  kafka-2:
    container_name: kafka-2
    image: confluentinc/cp-kafka:7.2.1
    restart: unless-stopped
    network_mode: host
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: 10.123.252.231:2181,10.123.252.194:2181,10.123.252.207:2181
      KAFKA_PARTITION_ASSIGNMENT_STRATEGY: org.apache.kafka.clients.consumer.RoundRobinAssignor
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://10.123.252.194:9092,EXTERNAL://host.docker.internal:29092"
    depends_on:
      - zookeeper-2
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  hive-server:
    container_name: hive-server
    image: bde2020/hive:2.3.2-postgresql-metastore
    restart: unless-stopped
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"
    networks:
      hivenetwork:
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  hive-metastore:
    container_name: hive-metastore
    image: bde2020/hive:2.3.2-postgresql-metastore
    restart: unless-stopped
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "10.123.252.194:9870 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083" 
    networks:
      hivenetwork:
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  hive-metastore-postgresql:
    container_name: hive-metastore-postgresql
    restart: unless-stopped
    build: 
      context: ./hive-docker
      dockerfile: Dockerfile
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      hivenetwork:
    logging:
      options:
        max-size: "10m"
        max-file: "3"
      
  presto-coordinator:
    container_name: presto-coordinator
    image: shawnzhu/prestodb:0.181
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      hivenetwork:
    logging:
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  hadoop_namenode:
  hadoop_datanode2:

networks:
  hivenetwork:
    name: "hivenetwork"